
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND CHAR COLON COMMA COMPARE C_CHAR C_FLOAT C_INT DIFFERENT DIVIDE DO ELSE EQUALS FLOAT FOR FUNCTION GREATER GREATER_EQ ID IF INT LBRACK LCURLY LESSER LESSER_EQ LPAREN MAIN MESSAGE MINUS OR PLUS PROGRAM QUOTE RBRACK RCURLY READ RETURN RPAREN SEMI THEN TIMES TO VARS VOID WHILE WRITEprogram_structure : PROGRAM ID SEMI declare_var functions MAIN LPAREN RPAREN LCURLY statutes RCURLYtype : INT\n            | FLOAT\n            | CHARdeclare_var : VARS type COLON multivars SEMImultivars : ID \n                 | ID COMMA multivars\n                 | dimvars\n                 | dimvars COMMA multivarsdimvars : ID dimensionsdimensions : LBRACK expr RBRACK\n                  | LBRACK expr RBRACK dimensionsdeclare_fun : FUNCTION return_type ID LPAREN RPAREN\n                   | FUNCTION return_type ID LPAREN params RPARENreturn_type : INT\n                    | FLOAT\n                    | CHAR\n                    | VOIDfunctions : declare_fun declare_var LCURLY statutes RCURLY\n                 | declare_fun declare_var LCURLY statutes RCURLY functionsstatutes : assign\n                | assign statutes\n                | call_void\n                | call_void statutes\n                | returning\n                | reading\n                | reading statutes\n                | writing\n                | writing statutes\n                | decision\n                | decision statutes\n                | conditional\n                | conditional statutes\n                | nonconditional\n                | nonconditional statutesparams : type COLON multivars\n              | type COLON multivars SEMI paramsassign : ID EQUALS expr SEMI\n              | dimvars EQUALS expr SEMIcall_void : ID LPAREN exprs RPAREN SEMIreturning : RETURN LPAREN expr RPAREN SEMIreading : READ LPAREN multivars RPAREN SEMIwriting : WRITE LPAREN write_opt RPAREN SEMIwrite_opt : QUOTE MESSAGE QUOTE\n                 | QUOTE MESSAGE QUOTE COMMA write_opt\n                 | exprs\n                 | exprs COMMA write_optdecision : IF LPAREN logic RPAREN THEN LCURLY statutes SEMI RCURLY \n                | IF LPAREN logic RPAREN THEN LCURLY statutes SEMI RCURLY ELSE LCURLY statutes SEMI RCURLYconditional : WHILE LPAREN logic RPAREN DO LCURLY statutes SEMI RCURLYnonconditional : FOR expr EQUALS expr TO expr DO LCURLY statutes SEMI RCURLYrelation : expr GREATER expr\n                | expr GREATER_EQ expr\n                | expr LESSER expr\n                | expr LESSER_EQ expr\n                | expr COMPARE expr\n                | expr DIFFERENT exprlogic : relation AND relation\n             | relation OR relation\n             | relationexprs : expr\n             | expr COMMA exprsexpr : expr PLUS term\n            | expr MINUS term\n            | termterm : term TIMES factor\n            | term DIVIDE factor\n            | factorfactor : C_INT\n              | MINUS C_INT\n              | C_FLOAT\n              | MINUS C_FLOAT\n              | C_CHAR\n              | ID\n              | dimvars\n              | ID LPAREN exprs RPAREN'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,110,],[0,-1,]),'ID':([2,16,17,18,19,20,21,23,30,31,33,34,35,36,37,45,48,50,51,52,61,62,63,64,65,66,67,68,99,100,101,102,103,106,108,111,113,114,119,121,122,123,124,125,126,127,128,138,141,142,155,158,159,160,169,170,171,175,176,179,],[3,24,-15,-16,-17,-18,26,38,38,38,38,38,38,38,38,76,26,76,26,38,76,76,76,76,26,76,76,76,76,76,76,76,76,76,26,-38,76,-39,76,76,76,76,76,76,76,76,76,-40,-42,-43,76,76,38,38,38,-48,-50,38,-51,-49,]),'SEMI':([3,25,26,27,30,31,32,33,34,35,36,37,49,54,55,56,57,58,59,60,70,72,73,74,75,76,77,81,83,86,89,104,105,109,111,112,114,115,116,117,131,132,133,134,136,137,138,140,141,142,156,164,165,170,171,172,176,177,179,],[4,47,-6,-8,-21,-23,-25,-26,-28,-30,-32,-34,-10,-22,-24,-27,-29,-31,-33,-35,-65,-68,-69,-71,-73,-74,-75,-7,-9,111,114,-70,-72,-11,-38,138,-39,140,141,142,-63,-64,-66,-67,157,-12,-40,-41,-42,-43,-76,167,168,-48,-50,174,-51,178,-49,]),'VARS':([4,8,78,107,],[6,6,-13,-14,]),'FUNCTION':([5,47,53,],[9,-5,9,]),'INT':([6,9,46,157,],[11,17,11,11,]),'FLOAT':([6,9,46,157,],[12,18,12,12,]),'CHAR':([6,9,46,157,],[13,19,13,13,]),'MAIN':([7,53,85,],[14,-19,-20,]),'VOID':([9,],[20,]),'COLON':([10,11,12,13,80,],[21,-2,-3,-4,108,]),'LPAREN':([14,24,38,40,41,42,43,44,76,],[22,46,62,64,65,66,67,68,106,]),'LCURLY':([15,28,47,145,154,166,173,],[23,52,-5,159,160,169,175,]),'RPAREN':([22,26,27,46,49,70,72,73,74,75,76,77,79,81,83,87,88,90,91,92,94,95,96,98,104,105,109,131,132,133,134,135,136,137,139,143,144,146,147,148,149,150,151,152,153,156,162,163,],[28,-6,-8,78,-10,-65,-68,-69,-71,-73,-74,-75,107,-7,-9,112,-61,115,116,117,-46,120,-60,129,-70,-72,-11,-63,-64,-66,-67,156,-36,-12,-62,-44,-47,-58,-59,-52,-53,-54,-55,-56,-57,-76,-37,-45,]),'RETURN':([23,30,31,33,34,35,36,37,52,111,114,138,141,142,159,160,169,170,171,175,176,179,],[40,40,40,40,40,40,40,40,40,-38,-39,-40,-42,-43,40,40,40,-48,-50,40,-51,-49,]),'READ':([23,30,31,33,34,35,36,37,52,111,114,138,141,142,159,160,169,170,171,175,176,179,],[41,41,41,41,41,41,41,41,41,-38,-39,-40,-42,-43,41,41,41,-48,-50,41,-51,-49,]),'WRITE':([23,30,31,33,34,35,36,37,52,111,114,138,141,142,159,160,169,170,171,175,176,179,],[42,42,42,42,42,42,42,42,42,-38,-39,-40,-42,-43,42,42,42,-48,-50,42,-51,-49,]),'IF':([23,30,31,33,34,35,36,37,52,111,114,138,141,142,159,160,169,170,171,175,176,179,],[43,43,43,43,43,43,43,43,43,-38,-39,-40,-42,-43,43,43,43,-48,-50,43,-51,-49,]),'WHILE':([23,30,31,33,34,35,36,37,52,111,114,138,141,142,159,160,169,170,171,175,176,179,],[44,44,44,44,44,44,44,44,44,-38,-39,-40,-42,-43,44,44,44,-48,-50,44,-51,-49,]),'FOR':([23,30,31,33,34,35,36,37,52,111,114,138,141,142,159,160,169,170,171,175,176,179,],[45,45,45,45,45,45,45,45,45,-38,-39,-40,-42,-43,45,45,45,-48,-50,45,-51,-49,]),'COMMA':([26,27,49,70,72,73,74,75,76,77,88,94,104,105,109,131,132,133,134,137,139,143,156,],[48,51,-10,-65,-68,-69,-71,-73,-74,-75,113,119,-70,-72,-11,-63,-64,-66,-67,-12,-62,158,-76,]),'LBRACK':([26,38,76,109,],[50,50,50,50,]),'RCURLY':([29,30,31,32,33,34,35,36,37,54,55,56,57,58,59,60,84,111,114,138,140,141,142,167,168,170,171,174,176,178,179,],[53,-21,-23,-25,-26,-28,-30,-32,-34,-22,-24,-27,-29,-31,-33,-35,110,-38,-39,-40,-41,-42,-43,170,171,-48,-50,176,-51,179,-49,]),'EQUALS':([38,39,49,69,70,72,73,74,75,76,77,104,105,109,131,132,133,134,137,156,],[61,63,-10,99,-65,-68,-69,-71,-73,-74,-75,-70,-72,-11,-63,-64,-66,-67,-12,-76,]),'C_INT':([45,50,61,62,63,64,66,67,68,71,99,100,101,102,103,106,113,119,121,122,123,124,125,126,127,128,155,158,],[73,73,73,73,73,73,73,73,73,104,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'MINUS':([45,49,50,61,62,63,64,66,67,68,69,70,72,73,74,75,76,77,82,86,88,89,90,97,99,100,101,102,103,104,105,106,109,113,119,121,122,123,124,125,126,127,128,130,131,132,133,134,137,148,149,150,151,152,153,155,156,158,161,],[71,-10,71,71,71,71,71,71,71,71,101,-65,-68,-69,-71,-73,-74,-75,101,101,101,101,101,101,71,71,71,71,71,-70,-72,71,-11,71,71,71,71,71,71,71,71,71,71,101,-63,-64,-66,-67,-12,101,101,101,101,101,101,71,-76,71,101,]),'C_FLOAT':([45,50,61,62,63,64,66,67,68,71,99,100,101,102,103,106,113,119,121,122,123,124,125,126,127,128,155,158,],[74,74,74,74,74,74,74,74,74,105,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'C_CHAR':([45,50,61,62,63,64,66,67,68,99,100,101,102,103,106,113,119,121,122,123,124,125,126,127,128,155,158,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'TIMES':([49,70,72,73,74,75,76,77,104,105,109,131,132,133,134,137,156,],[-10,102,-68,-69,-71,-73,-74,-75,-70,-72,-11,102,102,-66,-67,-12,-76,]),'DIVIDE':([49,70,72,73,74,75,76,77,104,105,109,131,132,133,134,137,156,],[-10,103,-68,-69,-71,-73,-74,-75,-70,-72,-11,103,103,-66,-67,-12,-76,]),'PLUS':([49,69,70,72,73,74,75,76,77,82,86,88,89,90,97,104,105,109,130,131,132,133,134,137,148,149,150,151,152,153,156,161,],[-10,100,-65,-68,-69,-71,-73,-74,-75,100,100,100,100,100,100,-70,-72,-11,100,-63,-64,-66,-67,-12,100,100,100,100,100,100,-76,100,]),'RBRACK':([49,70,72,73,74,75,76,77,82,104,105,109,131,132,133,134,137,156,],[-10,-65,-68,-69,-71,-73,-74,-75,109,-70,-72,-11,-63,-64,-66,-67,-12,-76,]),'GREATER':([49,70,72,73,74,75,76,77,97,104,105,109,131,132,133,134,137,156,],[-10,-65,-68,-69,-71,-73,-74,-75,123,-70,-72,-11,-63,-64,-66,-67,-12,-76,]),'GREATER_EQ':([49,70,72,73,74,75,76,77,97,104,105,109,131,132,133,134,137,156,],[-10,-65,-68,-69,-71,-73,-74,-75,124,-70,-72,-11,-63,-64,-66,-67,-12,-76,]),'LESSER':([49,70,72,73,74,75,76,77,97,104,105,109,131,132,133,134,137,156,],[-10,-65,-68,-69,-71,-73,-74,-75,125,-70,-72,-11,-63,-64,-66,-67,-12,-76,]),'LESSER_EQ':([49,70,72,73,74,75,76,77,97,104,105,109,131,132,133,134,137,156,],[-10,-65,-68,-69,-71,-73,-74,-75,126,-70,-72,-11,-63,-64,-66,-67,-12,-76,]),'COMPARE':([49,70,72,73,74,75,76,77,97,104,105,109,131,132,133,134,137,156,],[-10,-65,-68,-69,-71,-73,-74,-75,127,-70,-72,-11,-63,-64,-66,-67,-12,-76,]),'DIFFERENT':([49,70,72,73,74,75,76,77,97,104,105,109,131,132,133,134,137,156,],[-10,-65,-68,-69,-71,-73,-74,-75,128,-70,-72,-11,-63,-64,-66,-67,-12,-76,]),'TO':([49,70,72,73,74,75,76,77,104,105,109,130,131,132,133,134,137,156,],[-10,-65,-68,-69,-71,-73,-74,-75,-70,-72,-11,155,-63,-64,-66,-67,-12,-76,]),'AND':([49,70,72,73,74,75,76,77,96,104,105,109,131,132,133,134,137,148,149,150,151,152,153,156,],[-10,-65,-68,-69,-71,-73,-74,-75,121,-70,-72,-11,-63,-64,-66,-67,-12,-52,-53,-54,-55,-56,-57,-76,]),'OR':([49,70,72,73,74,75,76,77,96,104,105,109,131,132,133,134,137,148,149,150,151,152,153,156,],[-10,-65,-68,-69,-71,-73,-74,-75,122,-70,-72,-11,-63,-64,-66,-67,-12,-52,-53,-54,-55,-56,-57,-76,]),'DO':([49,70,72,73,74,75,76,77,104,105,109,129,131,132,133,134,137,156,161,],[-10,-65,-68,-69,-71,-73,-74,-75,-70,-72,-11,154,-63,-64,-66,-67,-12,-76,166,]),'QUOTE':([66,118,119,158,],[93,143,93,93,]),'MESSAGE':([93,],[118,]),'THEN':([120,],[145,]),'ELSE':([170,],[173,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program_structure':([0,],[1,]),'declare_var':([4,8,],[5,15,]),'functions':([5,53,],[7,85,]),'declare_fun':([5,53,],[8,8,]),'type':([6,46,157,],[10,80,80,]),'return_type':([9,],[16,]),'multivars':([21,48,51,65,108,],[25,81,83,91,136,]),'dimvars':([21,23,30,31,33,34,35,36,37,45,48,50,51,52,61,62,63,64,65,66,67,68,99,100,101,102,103,106,108,113,119,121,122,123,124,125,126,127,128,155,158,159,160,169,175,],[27,39,39,39,39,39,39,39,39,77,27,77,27,39,77,77,77,77,27,77,77,77,77,77,77,77,77,77,27,77,77,77,77,77,77,77,77,77,77,77,77,39,39,39,39,]),'statutes':([23,30,31,33,34,35,36,37,52,159,160,169,175,],[29,54,55,56,57,58,59,60,84,164,165,172,177,]),'assign':([23,30,31,33,34,35,36,37,52,159,160,169,175,],[30,30,30,30,30,30,30,30,30,30,30,30,30,]),'call_void':([23,30,31,33,34,35,36,37,52,159,160,169,175,],[31,31,31,31,31,31,31,31,31,31,31,31,31,]),'returning':([23,30,31,33,34,35,36,37,52,159,160,169,175,],[32,32,32,32,32,32,32,32,32,32,32,32,32,]),'reading':([23,30,31,33,34,35,36,37,52,159,160,169,175,],[33,33,33,33,33,33,33,33,33,33,33,33,33,]),'writing':([23,30,31,33,34,35,36,37,52,159,160,169,175,],[34,34,34,34,34,34,34,34,34,34,34,34,34,]),'decision':([23,30,31,33,34,35,36,37,52,159,160,169,175,],[35,35,35,35,35,35,35,35,35,35,35,35,35,]),'conditional':([23,30,31,33,34,35,36,37,52,159,160,169,175,],[36,36,36,36,36,36,36,36,36,36,36,36,36,]),'nonconditional':([23,30,31,33,34,35,36,37,52,159,160,169,175,],[37,37,37,37,37,37,37,37,37,37,37,37,37,]),'dimensions':([26,38,76,109,],[49,49,49,137,]),'expr':([45,50,61,62,63,64,66,67,68,99,106,113,119,121,122,123,124,125,126,127,128,155,158,],[69,82,86,88,89,90,88,97,97,130,88,88,88,97,97,148,149,150,151,152,153,161,88,]),'term':([45,50,61,62,63,64,66,67,68,99,100,101,106,113,119,121,122,123,124,125,126,127,128,155,158,],[70,70,70,70,70,70,70,70,70,70,131,132,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'factor':([45,50,61,62,63,64,66,67,68,99,100,101,102,103,106,113,119,121,122,123,124,125,126,127,128,155,158,],[72,72,72,72,72,72,72,72,72,72,72,72,133,134,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'params':([46,157,],[79,162,]),'exprs':([62,66,106,113,119,158,],[87,94,135,139,94,94,]),'write_opt':([66,119,158,],[92,144,163,]),'logic':([67,68,],[95,98,]),'relation':([67,68,121,122,],[96,96,146,147,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program_structure","S'",1,None,None,None),
  ('program_structure -> PROGRAM ID SEMI declare_var functions MAIN LPAREN RPAREN LCURLY statutes RCURLY','program_structure',11,'p_program_structure','Parser.py',8),
  ('type -> INT','type',1,'p_type','Parser.py',11),
  ('type -> FLOAT','type',1,'p_type','Parser.py',12),
  ('type -> CHAR','type',1,'p_type','Parser.py',13),
  ('declare_var -> VARS type COLON multivars SEMI','declare_var',5,'p_declare_var','Parser.py',16),
  ('multivars -> ID','multivars',1,'p_multivars','Parser.py',19),
  ('multivars -> ID COMMA multivars','multivars',3,'p_multivars','Parser.py',20),
  ('multivars -> dimvars','multivars',1,'p_multivars','Parser.py',21),
  ('multivars -> dimvars COMMA multivars','multivars',3,'p_multivars','Parser.py',22),
  ('dimvars -> ID dimensions','dimvars',2,'p_dimvars','Parser.py',25),
  ('dimensions -> LBRACK expr RBRACK','dimensions',3,'p_dimensions','Parser.py',28),
  ('dimensions -> LBRACK expr RBRACK dimensions','dimensions',4,'p_dimensions','Parser.py',29),
  ('declare_fun -> FUNCTION return_type ID LPAREN RPAREN','declare_fun',5,'p_declare_fun','Parser.py',32),
  ('declare_fun -> FUNCTION return_type ID LPAREN params RPAREN','declare_fun',6,'p_declare_fun','Parser.py',33),
  ('return_type -> INT','return_type',1,'p_return_type','Parser.py',36),
  ('return_type -> FLOAT','return_type',1,'p_return_type','Parser.py',37),
  ('return_type -> CHAR','return_type',1,'p_return_type','Parser.py',38),
  ('return_type -> VOID','return_type',1,'p_return_type','Parser.py',39),
  ('functions -> declare_fun declare_var LCURLY statutes RCURLY','functions',5,'p_functions','Parser.py',42),
  ('functions -> declare_fun declare_var LCURLY statutes RCURLY functions','functions',6,'p_functions','Parser.py',43),
  ('statutes -> assign','statutes',1,'p_statutes','Parser.py',46),
  ('statutes -> assign statutes','statutes',2,'p_statutes','Parser.py',47),
  ('statutes -> call_void','statutes',1,'p_statutes','Parser.py',48),
  ('statutes -> call_void statutes','statutes',2,'p_statutes','Parser.py',49),
  ('statutes -> returning','statutes',1,'p_statutes','Parser.py',50),
  ('statutes -> reading','statutes',1,'p_statutes','Parser.py',51),
  ('statutes -> reading statutes','statutes',2,'p_statutes','Parser.py',52),
  ('statutes -> writing','statutes',1,'p_statutes','Parser.py',53),
  ('statutes -> writing statutes','statutes',2,'p_statutes','Parser.py',54),
  ('statutes -> decision','statutes',1,'p_statutes','Parser.py',55),
  ('statutes -> decision statutes','statutes',2,'p_statutes','Parser.py',56),
  ('statutes -> conditional','statutes',1,'p_statutes','Parser.py',57),
  ('statutes -> conditional statutes','statutes',2,'p_statutes','Parser.py',58),
  ('statutes -> nonconditional','statutes',1,'p_statutes','Parser.py',59),
  ('statutes -> nonconditional statutes','statutes',2,'p_statutes','Parser.py',60),
  ('params -> type COLON multivars','params',3,'p_params','Parser.py',63),
  ('params -> type COLON multivars SEMI params','params',5,'p_params','Parser.py',64),
  ('assign -> ID EQUALS expr SEMI','assign',4,'p_assign','Parser.py',67),
  ('assign -> dimvars EQUALS expr SEMI','assign',4,'p_assign','Parser.py',68),
  ('call_void -> ID LPAREN exprs RPAREN SEMI','call_void',5,'p_call_void','Parser.py',71),
  ('returning -> RETURN LPAREN expr RPAREN SEMI','returning',5,'p_returning','Parser.py',74),
  ('reading -> READ LPAREN multivars RPAREN SEMI','reading',5,'p_reading','Parser.py',77),
  ('writing -> WRITE LPAREN write_opt RPAREN SEMI','writing',5,'p_writing','Parser.py',80),
  ('write_opt -> QUOTE MESSAGE QUOTE','write_opt',3,'p_write_opt','Parser.py',83),
  ('write_opt -> QUOTE MESSAGE QUOTE COMMA write_opt','write_opt',5,'p_write_opt','Parser.py',84),
  ('write_opt -> exprs','write_opt',1,'p_write_opt','Parser.py',85),
  ('write_opt -> exprs COMMA write_opt','write_opt',3,'p_write_opt','Parser.py',86),
  ('decision -> IF LPAREN logic RPAREN THEN LCURLY statutes SEMI RCURLY','decision',9,'p_decision','Parser.py',89),
  ('decision -> IF LPAREN logic RPAREN THEN LCURLY statutes SEMI RCURLY ELSE LCURLY statutes SEMI RCURLY','decision',14,'p_decision','Parser.py',90),
  ('conditional -> WHILE LPAREN logic RPAREN DO LCURLY statutes SEMI RCURLY','conditional',9,'p_conditional','Parser.py',93),
  ('nonconditional -> FOR expr EQUALS expr TO expr DO LCURLY statutes SEMI RCURLY','nonconditional',11,'p_nonconditional','Parser.py',96),
  ('relation -> expr GREATER expr','relation',3,'p_relation','Parser.py',99),
  ('relation -> expr GREATER_EQ expr','relation',3,'p_relation','Parser.py',100),
  ('relation -> expr LESSER expr','relation',3,'p_relation','Parser.py',101),
  ('relation -> expr LESSER_EQ expr','relation',3,'p_relation','Parser.py',102),
  ('relation -> expr COMPARE expr','relation',3,'p_relation','Parser.py',103),
  ('relation -> expr DIFFERENT expr','relation',3,'p_relation','Parser.py',104),
  ('logic -> relation AND relation','logic',3,'p_logic','Parser.py',107),
  ('logic -> relation OR relation','logic',3,'p_logic','Parser.py',108),
  ('logic -> relation','logic',1,'p_logic','Parser.py',109),
  ('exprs -> expr','exprs',1,'p_exprs','Parser.py',112),
  ('exprs -> expr COMMA exprs','exprs',3,'p_exprs','Parser.py',113),
  ('expr -> expr PLUS term','expr',3,'p_expr','Parser.py',116),
  ('expr -> expr MINUS term','expr',3,'p_expr','Parser.py',117),
  ('expr -> term','expr',1,'p_expr','Parser.py',118),
  ('term -> term TIMES factor','term',3,'p_term','Parser.py',121),
  ('term -> term DIVIDE factor','term',3,'p_term','Parser.py',122),
  ('term -> factor','term',1,'p_term','Parser.py',123),
  ('factor -> C_INT','factor',1,'p_factor','Parser.py',126),
  ('factor -> MINUS C_INT','factor',2,'p_factor','Parser.py',127),
  ('factor -> C_FLOAT','factor',1,'p_factor','Parser.py',128),
  ('factor -> MINUS C_FLOAT','factor',2,'p_factor','Parser.py',129),
  ('factor -> C_CHAR','factor',1,'p_factor','Parser.py',130),
  ('factor -> ID','factor',1,'p_factor','Parser.py',131),
  ('factor -> dimvars','factor',1,'p_factor','Parser.py',132),
  ('factor -> ID LPAREN exprs RPAREN','factor',4,'p_factor','Parser.py',133),
]
